read.csv("C:/Users/DKO/Desktop/spotify.csv")
spot <- read.csv("C:/Users/DKO/Desktop/spotify.csv")
ggplot(subset(spot, category == "top artist"), aes(artist, number)) +
geom_bar()
library(ggplot2)
ggplot(subset(spot, category == "top artist"), aes(artist, number)) +
geom_bar()
ggplot(subset(spot, category == "top artist"), aes(artist, number)) +
geom_bar(stat = "identity")
spot <- read.csv("C:/Users/DKO/Desktop/spotify.csv")
ggplot(subset(spot, category == "top artist"), aes(artist, number)) +
geom_bar(stat = "identity")
a <- ggplot(subset(spot, category == "top artist"), aes(artist, number)) +
geom_bar(stat = "identity")
library(htmlwidgets)
saveWidget(widget = a, file = "artist_plot.html", selfcontained = T)
getwd()
install.packages("htmlwidgets")
library(htmlwidgets)
saveWidget(widget = a, file = "artist_plot.html", selfcontained = T)
load("C:/Users/DKO/Desktop/R/max.rdata")
View(maxx)
library(readr)
install.packages("readr")
reta11 <- read.fwf("C:/Users/DKO/Desktop/R/ucr/RETA11.DAT",
widths = c(1, 2, 7, 2, 1, 2, 5, 2, 1, 7, 1, 6, 4, 2, 1, 9, 3, 3, 15, 15, 9, 9, 9, 1, 1, 1, 1, 23, 6, 30, 30, 30, 30, 5, 1, 29))
readLines("C:/Users/DKO/Desktop/R/ucr/RETA11.DAT", n = 10)
results <- read.csv("C:/Users/DKO/Desktop/R/audit/responses.csv")
View(results)
results$tmp <- factor(results$record)
colnames(results)[2] = "FirstName"
colnames(results)[3] = "LastName"
colnames(results)[4] = "Email"
colnames(results)[5] = "Number"
colnames(results)[6] = "Affiliation"
colnames(results)[7] = "University"
colnames(results)[8] = "record"
colnames(results)[9] = "RecordOffice"
colnames(results)[10] = "TimeOfRequest"
colnames(results)[11] = "Outcome"
colnames(results)[12] = "Interaction"
colnames(results)[13] = "AskedIdentity"
colnames(results)[14] = "WrittenRequest"
colnames(results)[15] = "SentElsewhere"
colnames(results)[16] = "UsedEmail"
colnames(results)[17] = "EmailResponse"
colnames(results)[18] = "TimeSpent"
results$tmp <- factor(results$record)
results$Records <- NA
names <- c("foundation travel", "provost evaluation", "violent crimes", "education budget", "football tickets")
i=1
for (prog in levels(results$tmp)) {
results$Records[results$record==prog] <- names[i]
i=i+1
}
results$record <- NULL
results$tmp <- factor(results$outcome)
results$tmp <- factor(results$Outcome)
results$RequestOutcome <- NA
names <- c("denied", "granted - immediate", "granted - later", "granted - email", "legal affairs", "obstructed - identifiers wanted", "obstructed - records law")
i=1
for (prog in levels(results$tmp)) {
results$RequestOutcome[results$outcome==prog] <- names[i]
i=i+1
}
summary(results$Outcome)
levels(results$Outcome)
results$tmp <- factor(results$Outcome)
results$RequestOutcome <- NA
names <- c("denied", "granted - immediate", "granted - later", "granted - email", "legal affairs", "obstructed - identifiers wanted", "obstructed - writing")
i=1
for (prog in levels(results$tmp)) {
results$RequestOutcome[results$outcome==prog] <- names[i]
i=i+1
}
results$tmp <- factor(results$Outcome)
results$RequestOutcome <- NA
names <- c("denied", "granted - immediate", "granted - later", "granted - email", "legal affairs", "obstructed - identifiers wanted", "obstructed - writing")
i=1
for (prog in levels(results$tmp)) {
results$RequestOutcome[results$)Outcome==prog] <- names[i]
i=i+1
}
results$tmp <- factor(results$Outcome)
results$RequestOutcome <- NA
names <- c("denied", "granted - immediate", "granted - later", "granted - email", "legal affairs", "obstructed - identifiers wanted", "obstructed - writing")
i=1
for (prog in levels(results$tmp)) {
results$RequestOutcome[results$Outcome==prog] <- names[i]
i=i+1
}
results$Outcome <- NULL
results$tmp <- NULL
save(results, file = "C:/Users/DKO/Desktop/R/audit/results.rdata")
load("C:/Users/DKO/Desktop/R/audit/results.rdata")
library(ggplot2)
ggplot(results, aes(factor(RequestOutcome))) +
geom_bar(stat = "bin", aes(fill = factor(Records)))
ggplot(results, aes(factor(RequestOutcome))) +
geom_bar(stat = "bin", aes(fill = factor(Records))) +
xlab("Outcome of Record Requests") +
ylab("Number of Requests")
ggplot(results, aes(factor(RequestOutcome))) +
geom_bar(stat = "bin", aes(fill = factor(Records))) +
facet_wrap(factor(University)) +
xlab("Outcome of Record Requests") +
ylab("Number of Requests")
ggplot(results, aes(factor(RequestOutcome))) +
geom_bar(stat = "bin", aes(fill = factor(Records))) +
facet_wrap(aes(factor(University))) +
xlab("Outcome of Record Requests") +
ylab("Number of Requests")
ggplot(results, aes(factor(RequestOutcome))) +
geom_bar(stat = "bin", aes(fill = factor(Records))) +
facet_wrap(aes(University)) +
xlab("Outcome of Record Requests") +
ylab("Number of Requests")
ggplot(results, aes(factor(RequestOutcome))) +
geom_bar(stat = "bin", aes(fill = factor(Records))) +
facet_wrap(~University) +
xlab("Outcome of Record Requests") +
ylab("Number of Requests")
install.packages("plotrix")
library(plotrix)
mytable <- table(results$AskedIdentity)
lbls <- c("Asked for Identity in Request", "Allowed to be Anonymous")
pie3D(mytable, labels = lbls, explode = 0.1, main = "Anonymity Allowed in Requests")
pie(mytable, labels = lbls, main = "Anonymity Allowed in Requests")
lbls <- c("NA", "Asked for Identity in Request", "Allowed to be Anonymous")
pie(mytable, labels = lbls, main = "Anonymity Allowed in Requests")
lbls <- c("NA","Allowed to be Anonymous", "Asked for Identity in Request")
pie(mytable, labels = lbls, main = "Anonymity Allowed in Requests")
pie(table2, main = "Written Requests Required")
table2 <- table(results$WrittenRequest)
pie(table2, main = "Written Requests Required")
library(shiny)
levels(results$University)
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
levels(results$University)
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
load("C:/Users/DKO/Desktop/R/audit/results.rdata")
ggplot(results, aes(factor(RequestOutcome))) +
geom_bar(stat = "bin", aes(fill = factor(Records))) +
xlab("Outcome of Record Requests") +
ylab("Number of Requests")
results <- read.csv("C:/Users/DKO/Desktop/R/audit/responses.csv")
colnames(results)[2] = "FirstName"
colnames(results)[3] = "LastName"
colnames(results)[4] = "Email"
colnames(results)[5] = "Number"
colnames(results)[6] = "Affiliation"
colnames(results)[7] = "University"
colnames(results)[8] = "record"
colnames(results)[9] = "RecordOffice"
colnames(results)[10] = "TimeOfRequest"
colnames(results)[11] = "Outcome"
colnames(results)[12] = "Interaction"
colnames(results)[13] = "AskedIdentity"
colnames(results)[14] = "WrittenRequest"
colnames(results)[15] = "SentElsewhere"
colnames(results)[16] = "UsedEmail"
colnames(results)[17] = "EmailResponse"
colnames(results)[18] = "TimeSpent"
results$tmp <- factor(results$record)
results$Records <- NA
names <- c("foundation travel", "provost evaluation", "violent crimes", "education budget", "football tickets")
i=1
for (prog in levels(results$tmp)) {
results$Records[results$record==prog] <- names[i]
i=i+1
}
View(results)
results$record <- NULL
results$tmp <- factor(results$Outcome)
results$RequestOutcome <- NA
names <- c("denied", "granted - immediate", "granted - later", "granted - email", "legal affairs", "obstructed - identifiers wanted", "obstructed - writing")
i=1
for (prog in levels(results$tmp)) {
results$RequestOutcome[results$Outcome==prog] <- names[i]
i=i+1
}
View(results)
results$Outcome <- NULL
results$tmp <- NULL
save(results, file = "C:/Users/DKO/Desktop/R/audit/results.rdata")
load("C:/Users/DKO/Desktop/R/audit/results.rdata")
ggplot(results, aes(factor(RequestOutcome))) +
geom_bar(stat = "bin", aes(fill = factor(Records))) +
xlab("Outcome of Record Requests") +
ylab("Number of Requests")
ggplot(results, aes(factor(RequestOutcome))) +
geom_bar(stat = "bin", aes(fill = factor(Records))) +
facet_wrap(~University) +
xlab("Outcome of Record Requests") +
ylab("Number of Requests")
load("C:/Users/DKO/Desktop/The Post/salaries/condensed_fac_salaries.rdata")
View(condense_fac)
s16 <- subset(condense_fac, !is.na(Salary_2016))
s16$dif0908 <- s16$Salary_2009 - s16$Salary_2008
s16$dif1009 <- s16$Salary_2010 - s16$Salary_2009
s16$dif1110 <- s16$Salary_2011 - s16$Salary_2010
s16$dif1112 <- s16$Salary_2012 - s16$Salary_2011
s16$dif1213 <- s16$Salary_2013 - s16$Salary_2012
s16$dif1314 <- s16$Salary_2014 - s16$Salary_2013
s16$dif1415 <- s16$Salary_2015 - s16$Salary_2014
s16$dif1516 <- s16$Salary_2016 - s16$Salary_2015
load("C:/Users/DKO/Desktop/The Post/salaries/fac_sals0816.rdata")
rm(sals)
save(s16, file = "C:/Users/DKO/Desktop/The Post/salaries/faculty2016.rdata")
View(s16)
load("C:/Users/DKO/Desktop/R/audit/results.rdata")
library(ggplot2)
ggplot(results, aes(factor(RequestOutcome))) +
geom_bar(stat = "bin", aes(fill = factor(Records))) +
xlab("Outcome of Record Requests") +
ylab("Number of Requests")
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
shiny::runApp('audit')
?renderPlot
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
install.packages("shinyapps")
devtools::install_github('rstudio/shinyapps')
install.packages("digest")
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='dk-o', token='2BA3FBEF1624864EE9D8751C2000870D', secret='oVI+W0s/kEqPggFnLIp0qY50PGR2iOb9Nfvu/gR4')
library(shinyapps)
shiny::runApp('audit')
shiny::runApp('audit/app')
load("C:/Users/DKO/Desktop/R/campaign_donations.rdata")
shiny::runApp('app_max')
load("C:/Users/DKO/Desktop/R/campaign_donations.rdata")
ohf <- subset(camp, DONORNAME == "Osteopathic Heritage Foundations")
cle <- subset(camp, DONORNAME == "Cleveland Clinic Health System")
shf <- subset(camp, DONORNAME == "Scripps Howard Foundation")
bks <- subset(camp, DONORNAME == "Estate of Beth K. Stocker")
dr <- subset(camp, DONORNAME == "Estate of Dolores Russ")
vlp <- subset(camp, DONORNAME == "Dr. Violet L. Patton")
lj <- subset(camp, DONORNAME == "Ms. Lynn Johnson")
lj2 <- subset(camp, DONORNAME == "Lynn Johnson")
lj <- rbind(lj, lj2)
an <- subset(camp, DONORNAME == "Anonymous")
View(lj2)
View(lj)
lj <- subset(lj, DONORTYPE != "Friend")
an <- subset(camp, DONORNAME == "Anonymous")
tops <- rbind(ohf, cle, shf, bks, dr, vlp, lj, an)
tops <- tops %>%
group_by(DONORNAME, year) %>%
summarise(number = length(unique(ID)),
total = sum(AMT))
library(dplyr)
tops <- tops %>%
group_by(DONORNAME, year) %>%
summarise(number = length(unique(ID)),
total = sum(AMT))
View(tops)
tops <- tops %>%
group_by(DONORNAME) %>%
mutate(number = length(unique(ID)),
total = sum(AMT))
tops <- tops %>%
group_by(DONORNAME) %>%
mutate(TotalCount = sum(number),
TotalDonations = sum(AMT))
tops <- tops %>%
group_by(DONORNAME) %>%
mutate(TotalCount = sum(number),
TotalDonations = sum(total))
ggplot(tops, aes(year, AMT, group = DONORNAME)) +
geom_line()
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_line()
pal <- c('#1f3d7a', '#9daf72', '#566047', '#562f32', '#462d44', '#859731', '#640e27', '#33001a')
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_line() +
scale_color_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_line() +
scale_fill_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_line(aes(colour = factor(DONORNAME))) +
scale_color_manual(values = pal)
levels(tops$DONORNAME)
length(unique(tops$DONORNAME))
View(results)
tops$DONORNAME[tops$DONORNAME == "Lynn Johnson"] <- "Ms. Lynn Johnson"
tops <- rbind(ohf, cle, shf, bks, dr, vlp, lj, an)
tops$DONORNAME[tops$DONORNAME == "Lynn Johnson"] <- "Ms. Lynn Johnson"
tops <- tops %>%
group_by(DONORNAME, year) %>%
summarise(number = length(unique(ID)),
total = sum(AMT))
tops <- tops %>%
group_by(DONORNAME) %>%
mutate(TotalCount = sum(number),
TotalDonations = sum(total))
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_line(aes(colour = factor(DONORNAME))) +
scale_color_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_line(aes(colour = factor(DONORNAME), size = 1)) +
scale_color_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_line(aes(colour = factor(DONORNAME), size = .5)) +
scale_color_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_line(aes(colour = factor(DONORNAME), size = .2)) +
scale_color_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_line(aes(colour = factor(DONORNAME), size = .07)) +
scale_color_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_line(aes(colour = factor(DONORNAME), size = .02)) +
scale_color_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_line(aes(colour = factor(DONORNAME), size = .002)) +
scale_color_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_line(aes(colour = factor(DONORNAME))) +
scale_color_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_line(aes(colour = factor(DONORNAME), size = .05)) +
scale_color_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_line(aes(colour = factor(DONORNAME), size = .0005)) +
scale_color_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_line(aes(colour = factor(DONORNAME))) +
scale_color_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_hist(aes(colour = factor(DONORNAME))) +
scale_color_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_histogram(aes(colour = factor(DONORNAME))) +
scale_color_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_bar(stat = "identity", aes(colour = factor(DONORNAME))) +
scale_color_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_bar(stat = "identity", aes(fill = factor(DONORNAME))) +
scale_fill_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_bar(stat = "identity", position = "dodge", aes(fill = factor(DONORNAME))) +
scale_fill_manual(values = pal)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_bar(stat = "identity", position = "dodge", aes(fill = factor(DONORNAME))) +
scale_fill_manual(values = pal) +
scale_x_discrete(limits = levels(tops$year))
load("C:/Users/DKO/Desktop/R/campaign_donations.rdata")
tops$year <- factor(tops$year)
ggplot(tops, aes(year, total, group = DONORNAME)) +
geom_bar(stat = "identity", position = "dodge", aes(fill = factor(DONORNAME))) +
scale_fill_manual(values = pal) +
scale_x_discrete(limits = levels(tops$year))
shiny::runApp('app_max')
shiny::runApp('app_max')
load("max-data.rdata")
load("C:/Users/DKO/Desktop/R/app_max/max-data.rdata")
sum(maxx$AMT)
sum(camp$AMT)
163402850/500136218
save(an, bks, cle, dr, lj, maxx, ohf, shf, vlp, tops, file = "C:/Users/DKO/Desktop/R/app_max/max-data.rdata")
View(maxx)
View(camp)
View(dr)
d <- subset(dr, year == 2008)
View(d)
d <- d %>% group_by(AMTTYPE) %>% mutate(total = sum(AMT))
shiny::runApp('app_max')
setup_twitter_oauth(consumer_key = "4yUtgc1w8cdtXIpOGbEJ02GLF",
consumer_secret = "9SKeAC95ROWlVmDLA26CXpbvbbFz3Wb4n7yVySYZppRMvzA1ex",
access_token = "476953088-10jyeOCwEBsX8p6ngQof5IJg6oXzPogVi3CFh5kt",
access_secret = "X3nbEekHbfEC2vLlYj3hJb0YxXHGjMgcRrzZkTIT4W4fh")
library(twitteR)
consumer_secret = "9SKeAC95ROWlVmDLA26CXpbvbbFz3Wb4n7yVySYZppRMvzA1ex",
setup_twitter_oauth(consumer_key = "4yUtgc1w8cdtXIpOGbEJ02GLF",
consumer_secret = "9SKeAC95ROWlVmDLA26CXpbvbbFz3Wb4n7yVySYZppRMvzA1ex",
access_token = "476953088-10jyeOCwEBsX8p6ngQof5IJg6oXzPogVi3CFh5kt",
access_secret = "X3nbEekHbfEC2vLlYj3hJb0YxXHGjMgcRrzZkTIT4W4fh")
shiny::runApp('twit')
install.packages("curl")
runApp('twit')
install.packages("dplyr")
runApp('twit')
install.packages('purrr')
runApp('twit')
install.packages('twitteR')
runApp('twit')
install.packages('lubridate')
runApp('twit')
install.packages('ggplot2')
runApp('twit')
install.packages('tidytext')
runApp('twit')
